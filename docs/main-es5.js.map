{"version":3,"sources":["webpack:///src/app/medication-render/medication-render.component.ts","webpack:///src/app/medication-render/medication-render.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/product-render/product-render.component.ts","webpack:///src/app/product-render/product-render.component.html","webpack:///src/app/body/body.component.ts","webpack:///src/app/body/body.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/medication-data-source.ts","webpack:///src/app/terminology.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MedicationRenderComponent","editorLanguage","selector","templateUrl","styleUrls","medication","codeableConcept","environment","apiBaseUrl","apiUrl","appName","awsPubKey","nodeEnv","production","config","baseUrl","ontoClientId","ontoClientSecret","ProductRenderComponent","product","pharmaceuticalProduct","medicationProduct","CodeElement","BodyComponent","terminologyService","router","route","loading","allCompleted","notes","queryCnt","conceptid","undefined","display","scheduled","productPharm","resourceType","administrableDoseForm","ingredient","routeOfAdministration","medicinalProduct","medicinal","parentCodes","ampCodes","workerMedication","productDisplay","parentExpand","childExpand","childDisplayedColumns","parentDataSource","ampDataSource","doSetup","url","subscribe","tempid","snapshot","paramMap","get","setup","navigate","code","identifier","name","productClassification","legalStatusOfSupply","data","coding","getCoding","processProducts","getResource","result","completedQuery","parameters","post","valueSet","expansion","childDataSource","contains","err","console","error","codeSystem","clear","parameter","valueString","setDrugName","push","system","productName","processParameter","params","manfacturedForm","unit","unitOfUse","synonym","prescribingStatus","amp","unavailable","discont","classification","length","valueCode","getParents","getDisplay","part","param","isNumber","getCodeableConcept","type","concept","hasCode","processResult","updateMaster","processEntry","form","combinedPharmaceuticalDoseForm","indexOf","additionalMonitoringIndicator","valueCoding","container","parentCode","value","isNaN","Number","toString","MessageService","messageEvent","message","log","emit","providedIn","AppComponent","title","AppModule","forRoot","declarations","imports","providers","bootstrap","MedicationDataSource","_contains","dataStore","questionnaire","next","Object","assign","asObservable","Formats","TerminologyService","http","messageService","format","JsonFormatted","accessToken","nameChange","authenticated","drugName","encodedUri","encodeURIComponent","contentType","headers","append","search","getAccessToken","responseType","resource","body","getHeaders","URLSearchParams","response","access_token","routes","path","component","children","AppRoutingModule","exports","MainComponent","displayedColumns","doAuthenticate","getDrugNameChange","getMedicationValueSet","encodeURI","dataSource","relativeTo","designation","desingation","splitted","split","replace","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\r\n// @ts-ignore\r\nimport Patient = fhir.Patient;\r\n// @ts-ignore\r\nimport Medication = fhir.Medication;\r\nimport {IMedication} from \"@ahryman40k/ts-fhir-types/lib/R4\";\r\n// @ts-ignore\r\nimport CodeableConcept = fhir.CodeableConcept;\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-medication-render',\r\n  templateUrl: './medication-render.component.html',\r\n  styleUrls: ['./medication-render.component.scss']\r\n})\r\nexport class MedicationRenderComponent implements OnInit {\r\n\r\n  editorLanguage: string = 'json';\r\n\r\n  @Input()\r\n  medication : Medication;\r\n\r\n  @Input()\r\n  codeableConcept : CodeableConcept;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n}\r\n","\r\n\r\n       <div class=\"mat-card-content\"\r\n            fxLayout\r\n            fxLayout.xs=\"column\"\r\n            fxLayoutAlign=\"center\"\r\n            fxLayoutGap=\"10px\"\r\n            fxLayoutGap.xs=\"0\">\r\n\r\n           <div class=\"mat-body-1\" fxFlex=\"50%\">\r\n           <!--     <td-code-editor\r\n                        [style.height.px]=\"300\"\r\n                        editorStyle=\"border:0;\"\r\n                        [editorOptions]=\"{readOnly:true, fontSize:12, automaticLayout: false}\"\r\n                        #editor\r\n                        class=\"editor\"\r\n                        theme=\"vs\"\r\n                        [language]=\"editorLanguage\"\r\n                        [(ngModel)]=\"editorVal\"\r\n                        flex\r\n                ></td-code-editor> -->\r\n               <td-expansion-panel label=\"FHIR Medication\">\r\n                <td-json-formatter [data]=\"medication\" [levelsOpen]=\"4\"></td-json-formatter>\r\n               </td-expansion-panel>\r\n           </div>\r\n           <div class=\"mat-body-1\" fxFlex=\"50%\">\r\n               <td-expansion-panel label=\"FHIR Codeable Concept\">\r\n               <td-json-formatter [data]=\"codeableConcept\" [levelsOpen]=\"4\"></td-json-formatter>\r\n               </td-expansion-panel>\r\n           </div>\r\n       </div>\r\n\r\n\r\n","export const environment = {\n   apiBaseUrl: 'undefined',\n   apiUrl: 'undefined',\n   appName: 'undefined',\n   awsPubKey: 'undefined',\n   nodeEnv: 'undefined',\n   production: true,\n   config : {\n       baseUrl: 'https://ontology.nhs.uk/authoring/fhir',\n       ontoClientId: 'NHSD_Kevin_Mayfield',\n       ontoClientSecret: '60cced26-e8d6-434e-bfcf-c9c6cc6074fc'\n   }\n};\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {R4} from \"@ahryman40k/ts-fhir-types\";\r\n\r\n@Component({\r\n  selector: 'app-product-render',\r\n  templateUrl: './product-render.component.html',\r\n  styleUrls: ['./product-render.component.scss']\r\n})\r\nexport class ProductRenderComponent implements OnInit {\r\n\r\n  @Input()\r\n  product : any\r\n\r\n  @Input()\r\n  pharmaceuticalProduct : R4.IMedicinalProductPharmaceutical;\r\n\r\n  @Input()\r\n  medicationProduct : R4.IMedicinalProduct;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n\r\n    <span *ngIf=\"pharmaceuticalProduct\">\r\n        <td-expansion-panel label=\"FHIR MedicinalProductPharmaceutical\" sublabel=\"Experimental\" >\r\n             <div class=\"md-padding\">\r\n                    <td-json-formatter  [data]=\"pharmaceuticalProduct\" [levelsOpen]=\"8 \"></td-json-formatter>\r\n             </div>\r\n        </td-expansion-panel>\r\n        <br>\r\n    </span>\r\n    <span *ngIf=\"medicationProduct\">\r\n\r\n         <td-expansion-panel label=\"FHIR MedicinalProduct\" sublabel=\"Experimental\" >\r\n             <div class=\"md-padding\">\r\n                 <td-json-formatter  [data]=\"medicationProduct\" [levelsOpen]=\"8 \"></td-json-formatter>\r\n             </div>\r\n         </td-expansion-panel>\r\n        <br>\r\n    </span>\r\n    <td-expansion-panel label=\"Terminology Server $lookup\" sublabel=\"modfied\" >\r\n        <div class=\"md-padding\">\r\n            <td-json-formatter [data]=\"product\" [levelsOpen]=\"8 \"></td-json-formatter>\r\n        </div>\r\n    </td-expansion-panel>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n// @ts-ignore\r\nimport ValueSet = fhir.ValueSet;\r\nimport {TerminologyService} from \"../terminology.service\";\r\nimport {MedicationDataSource} from \"../medication-data-source\";\r\n// @ts-ignore\r\nimport ValueSetExpansionContains = fhir.ValueSetExpansionContains;\r\n// @ts-ignore\r\nimport Medication = fhir.Medication;\r\nimport {MatTableDataSource} from \"@angular/material/table\";\r\n// @ts-ignore\r\nimport ParametersParameter = fhir.ParametersParameter;\r\n// @ts-ignore\r\nimport Parameters = fhir.Parameters;\r\n// @ts-ignore\r\nimport CodeableConcept = fhir.CodeableConcept;\r\n// @ts-ignore\r\nimport Coding = fhir.Coding;\r\nimport {CodingDataSource} from \"../coding-data-source\";\r\nimport {R4} from '@ahryman40k/ts-fhir-types';\r\n\r\n\r\nexport class CodeElement {\r\n    code: string;\r\n    system?: string;\r\n    display: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-body',\r\n    templateUrl: './body.component.html',\r\n    styleUrls: ['./body.component.scss']\r\n})\r\nexport class BodyComponent implements OnInit {\r\n\r\n\r\n    loading: boolean = false;\r\n\r\n    allCompleted = 0;\r\n\r\n    notes: string[] = [];\r\n\r\n    queryCnt = 0;\r\n\r\n    conceptid: string = undefined;\r\n\r\n    display: string = undefined;\r\n\r\n    scheduled: string = undefined;\r\n\r\n    codeSystem: \"http://snomed.info/sct\";\r\n\r\n    childDataSource: MedicationDataSource;\r\n\r\n    productPharm: R4.IMedicinalProductPharmaceutical = undefined;\r\n\r\n    pharmaceuticalProduct: R4.IMedicinalProductPharmaceutical = {\r\n        resourceType: 'MedicinalProductPharmaceutical',\r\n        administrableDoseForm: {},\r\n        ingredient: [],\r\n        routeOfAdministration: []\r\n    };\r\n\r\n    medicinalProduct: R4.IMedicinalProduct = undefined;\r\n\r\n    medicinal: R4.IMedicinalProduct = undefined;\r\n\r\n    ampDataSource: MatTableDataSource<CodeElement>;\r\n\r\n    parentCodes: CodeElement[] = [];\r\n    parentDataSource: MatTableDataSource<CodeElement>;\r\n    ampCodes: CodeElement[] = [];\r\n    medication: Medication = undefined;\r\n\r\n    workerMedication: Medication = undefined;\r\n\r\n    codeableConcept: CodeableConcept = undefined;\r\n\r\n    product: Parameters = undefined;\r\n    productDisplay: any = undefined;\r\n    //medicationProduct : IMedicinalProduct = undefined;\r\n    parentExpand: ValueSet = undefined;\r\n    childExpand: ValueSet = undefined;\r\n\r\n    childDisplayedColumns = ['display'];\r\n\r\n    constructor(private terminologyService: TerminologyService,\r\n                private router: Router,\r\n                private route: ActivatedRoute) {\r\n        this.parentDataSource = new MatTableDataSource<CodeElement>();\r\n        this.ampDataSource = new MatTableDataSource<CodeElement>();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.doSetup();\r\n        this.route.url.subscribe(url => {\r\n            this.doSetup();\r\n        });\r\n    }\r\n\r\n    doSetup() {\r\n\r\n        const tempid = this.route.snapshot.paramMap.get('conceptid');\r\n        if (this.conceptid !== tempid) {\r\n            this.conceptid = tempid;\r\n            if (this.conceptid != undefined) {\r\n                this.setup(this.conceptid);\r\n            }\r\n        }\r\n    }\r\n\r\n    select(medication: ValueSetExpansionContains) {\r\n        this.router.navigate([medication.code]);\r\n    }\r\n\r\n\r\n    clear() {\r\n\r\n\r\n\r\n        this.notes = [];\r\n        this.ampCodes = [];\r\n\r\n        this.workerMedication = {\r\n            code: {}\r\n        };\r\n\r\n        this.productPharm = undefined;\r\n        this.pharmaceuticalProduct = {\r\n            resourceType: 'MedicinalProductPharmaceutical',\r\n            administrableDoseForm: {},\r\n            ingredient: [],\r\n            routeOfAdministration: []\r\n        };\r\n        this.medicinal = undefined;\r\n        this.medicinalProduct = {\r\n            resourceType: 'MedicinalProduct',\r\n            identifier: [],\r\n            name: [],\r\n            productClassification: [],\r\n            legalStatusOfSupply: {}\r\n        };\r\n\r\n        this.parentCodes = [];\r\n        this.ampCodes = [];\r\n\r\n        this.ampDataSource.data = this.ampCodes;\r\n\r\n        this.scheduled = undefined;\r\n\r\n        this.codeableConcept = {};\r\n        this.codeableConcept.coding = [\r\n            this.getCoding()];\r\n        this.queryCnt = 0;\r\n    }\r\n\r\n    completedQuery() {\r\n        this.allCompleted--;\r\n\r\n        if (this.allCompleted == 0 ) {\r\n\r\n            // faulty needs to reassign once complete\r\n\r\n            this.processProducts(this.product);\r\n            this.loading = false;\r\n        }\r\n    }\r\n    setup(medication: string) {\r\n\r\n        this.loading = true;\r\n        this.product = {};\r\n        this.parentExpand = undefined;\r\n        this.childExpand = undefined;\r\n        this.allCompleted = 4;\r\n       // const url = '/CodeSystem/$lookup?code=' + medication + '&system=http%3A%2F%2Fsnomed.info%2Fsct&version=' + this.terminologyService.getSNOMEDVersion() + '&property=*';\r\n        const url = '/CodeSystem/$lookup?code=' + medication + '&system=http%3A%2F%2Fsnomed.info%2Fsct' + '&property=*';\r\n        this.terminologyService.getResource(url).subscribe(\r\n            result => {\r\n\r\n                this.product = result;\r\n                this.completedQuery();\r\n            }\r\n        );\r\n        const parameters = {\r\n            \"resourceType\": \"Parameters\",\r\n            \"parameter\": [\r\n                {\r\n                    \"name\": \"valueSet\",\r\n                    \"resource\": {\r\n                        \"resourceType\": \"ValueSet\",\r\n                        \"compose\": {\r\n                            \"include\": [\r\n                                {\r\n                                    \"system\": \"http://snomed.info/sct\",\r\n                                    \"filter\": [\r\n                                        {\r\n                                            \"property\": \"parent\",\r\n                                            \"op\": \"=\",\r\n                                            \"value\": medication\r\n                                        }\r\n                                    ],\r\n                                   // \"version\": this.terminologyService.getSNOMEDVersionRaw()\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"count\",\r\n                    \"valueInteger\": 10000\r\n                }\r\n            ]\r\n        };\r\n        this.terminologyService.post('/ValueSet/$expand?_format=json&elements=expansion.contains.total,expansion.contains.contains', parameters).subscribe(\r\n            result => {\r\n                //this.product = result.parameter;\r\n\r\n                const valueSet = <ValueSet>result;\r\n                if (valueSet.expansion != undefined) {\r\n                    this.childDataSource = new MedicationDataSource(valueSet.expansion.contains);\r\n                }\r\n\r\n            },\r\n            err => console.error('Observer got an error: ' + err),\r\n            () => {\r\n                this.completedQuery();\r\n            },\r\n        );\r\n\r\n        this.terminologyService.get('/ValueSet/$expand?url=http://snomed.info/sct?fhir_vs=ecl/>!'+medication).subscribe(\r\n            result => {\r\n                this.parentExpand = result;\r\n            },\r\n            err => console.error('Observer got an error: ' + err),\r\n            () => {\r\n                this.completedQuery();\r\n            },\r\n        );\r\n        this.terminologyService.get('/ValueSet/$expand?url=http://snomed.info/sct?fhir_vs=ecl/'+medication+'.*').subscribe(\r\n            result => {\r\n                this.childExpand = result;\r\n            },\r\n            err => console.error('Observer got an error: ' + err),\r\n            () => {\r\n                this.completedQuery();\r\n            },\r\n        );\r\n\r\n    }\r\n\r\n    getCoding() {\r\n        return {\r\n            \"system\": this.codeSystem,\r\n            \"code\": this.conceptid,\r\n            \"display\": this.display\r\n        }\r\n    }\r\n\r\n    processProducts(parameters: Parameters) {\r\n\r\n        this.clear();\r\n        // Don't know name of concept at this point\r\n        for (const parameter of parameters.parameter) {\r\n            if (parameter.name === 'display') {\r\n                this.display = parameter.valueString;\r\n                this.terminologyService.setDrugName(parameter.valueString);\r\n            }\r\n            if (parameter.name === 'system') {\r\n                this.codeSystem = parameter.valueString;\r\n            }\r\n        }\r\n\r\n        this.workerMedication.code.coding = [\r\n            this.getCoding()];\r\n        this.medication = {\r\n            \"code\": this.workerMedication.code\r\n        };\r\n        this.codeableConcept = {};\r\n        this.codeableConcept.coding = [\r\n            this.getCoding()];\r\n\r\n        this.pharmaceuticalProduct.identifier = [];\r\n        this.pharmaceuticalProduct.identifier.push(\r\n            {\r\n                \"system\": this.getCoding().system,\r\n                \"value\": this.getCoding().code\r\n            }\r\n        );\r\n        this.medicinalProduct.identifier.push(\r\n            {\r\n                \"system\": this.getCoding().system,\r\n                \"value\": this.getCoding().code\r\n            }\r\n        );\r\n        this.medicinalProduct.name.push({\r\n            productName: this.getCoding().display\r\n        });\r\n\r\n        this.processParameter(parameters.parameter);\r\n\r\n    }\r\n\r\n    processParameter(params: ParametersParameter[]) {\r\n        var manfacturedForm = false;\r\n        var unit = false;\r\n        var unitOfUse = false;\r\n        var ingredient = false;\r\n        var scheduled = false;\r\n        var synonym = false;\r\n        var prescribingStatus = false;\r\n        var amp = false;\r\n        var unavailable = false;\r\n        var discont = false;\r\n        var route = false;\r\n        var classification = false;\r\n        if (params.length > 0 && params[0].name === 'code' && params[0].valueCode != undefined && params[0].valueCode === 'parent') {\r\n            this.getParents(params);\r\n        }\r\n\r\n        for (const parameter of params) {\r\n            // Process parent codes first .... not robust as second call could in theory beat first call\r\n            if (parameter.valueCode != undefined) {\r\n                this.getDisplay(parameter, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification);\r\n\r\n                if (parameter.valueCode == '30523011000036108' ||\r\n                    parameter.valueCode == '732947008' ||\r\n                    parameter.valueCode == '411116001' ||\r\n                    parameter.valueCode == '10362901000001105') manfacturedForm = true;\r\n\r\n                if (parameter.valueCode == '700000081000036101' ||\r\n                    parameter.valueCode == '127489000'\r\n                    || parameter.valueCode == '10362801000001104') ingredient = true;\r\n                if (parameter.valueCode == '177631000036102'\r\n                    || parameter.valueCode == '732945000') unit = true;\r\n                if (parameter.valueCode == '30548011000036101') unitOfUse = true;\r\n                if (parameter.valueCode == '13089101000001102') scheduled = true;\r\n                if (parameter.valueCode == '900000000000013009') synonym = true;\r\n                if (parameter.valueCode == '8940001000001105') prescribingStatus = true;\r\n                if (parameter.valueCode == '10362701000001108') amp = true;\r\n                if (parameter.valueCode == '8940601000001102') unavailable = true;\r\n                if (parameter.valueCode == '8941901000001101') discont = true;\r\n                if (parameter.valueCode == '13088401000001104') route = true;\r\n                // 13088501000001100 dose and route....\r\n                if (parameter.valueCode == '13088701000001106'\r\n                    || parameter.valueCode == '13088501000001100')  classification = true;\r\n            }\r\n            if (parameter.part !== undefined && parameter.part.length > 0) {\r\n                this.processParameter(parameter.part);\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    getDisplay(param: ParametersParameter, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification) {\r\n\r\n        if (this.isNumber(param.valueCode)) {\r\n\r\n            switch (param.valueCode) {\r\n                case '30450011000036109': // Medicinal Product\r\n                    this.medicinalProduct.productClassification.push(this.getCodeableConcept(param.valueCode, '?? Product Pack'));\r\n                    param.valueCode = '?? Product (' + param.valueCode + ')';\r\n                    break;\r\n                case '10364001000001104':\r\n\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Actual medicinal product pack');\r\n                    param.valueCode = 'Actual medicinal product pack (' + param.valueCode + ')';\r\n                    break;\r\n                case '10363801000001108':\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Virtual medicinal product');\r\n                    param.valueCode = 'Virtual medicinal product (' + param.valueCode + ')';\r\n                    break;\r\n                case '30560011000036108' : // Trade Product\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, '?? Product Pack');\r\n                    param.valueCode = '?? Product (' + param.valueCode + ')';\r\n                    break;\r\n\r\n                case \"9191801000001103\":\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Trade family');\r\n                    param.valueCode = 'Trade family (' + param.valueCode + ')';\r\n                    break;\r\n\r\n                case '10363901000001102':\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Actual medicinal product');\r\n                    param.valueCode = 'Actual medicinal product (' + param.valueCode + ')';\r\n                    break;\r\n\r\n\r\n                case '30404011000036106':\r\n                case '30425011000036101': // - trade product unit of use\r\n\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, '?? Product Pack');\r\n                    param.valueCode = 'trade product pack (' + param.valueCode + ')';\r\n                    break;\r\n\r\n                case '8653601000001108': // Virtual medicinal product pack\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Virtual medicinal product pack');\r\n                    param.valueCode = 'Virtual medicinal product pack (' + param.valueCode + ')';\r\n                    break;\r\n\r\n                /* AU  case '30497011000036103':\r\n                       this.vtm = true;\r\n                       param.valueCod= 'moiety (30497011000036103)';\r\n                       break; */\r\n                case '10363701000001104':\r\n\r\n\r\n                    this.medicinalProduct.type= this.getCodeableConcept(param.valueCode, 'Virtual therapeutic moiety');\r\n                    param.valueCode = 'Virtual Therapeutic Moiety (' + param.valueCode + ')';\r\n                    break;\r\n                default:\r\n                    this.queryCnt++;\r\n\r\n                    const url = '/CodeSystem/$lookup?code=' + param.valueCode + '&system=http%3A%2F%2Fsnomed.info%2Fsct&property=display';\r\n\r\n                    var concept = this.hasCode(param.valueCode);\r\n                    if (concept === undefined) {\r\n                        this.terminologyService.getResource(url).subscribe(\r\n                            result => {\r\n\r\n                                this.processResult(result, param, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification);\r\n                            },\r\n                            error => {\r\n\r\n                                this.updateMaster();\r\n                            },\r\n                            () => {\r\n                                this.updateMaster();\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        var coding: Coding = {};\r\n                        coding = {\r\n                            \"system\": \"http://snomed.info/sct\",\r\n                            \"code\": concept.code,\r\n                            \"display\": concept.display\r\n                        };\r\n                        this.processEntry(coding, param, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification)\r\n                        this.updateMaster();\r\n                    }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    processEntry(coding, param, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification) {\r\n        var concept = {\r\n            coding: [\r\n                coding\r\n            ]\r\n        }\r\n\r\n\r\n        if (manfacturedForm) {\r\n\r\n            this.workerMedication.form = {\r\n                \"coding\": []\r\n            };\r\n            this.workerMedication.form.coding.push(coding);\r\n            this.medication = {\r\n                \"code\": this.workerMedication.code,\r\n                \"form\": this.workerMedication.form\r\n            };\r\n            this.pharmaceuticalProduct.administrableDoseForm = this.workerMedication.form;\r\n            this.medicinalProduct.combinedPharmaceuticalDoseForm = this.workerMedication.form;\r\n            // Above is not displaying\r\n            //      this.notes.push('Form: '+parameter.valueString)\r\n\r\n        } else if (unitOfUse) {\r\n            this.notes.push('Unit Of Use: ' + coding.display)\r\n        } else if (ingredient) {\r\n            this.pharmaceuticalProduct.ingredient.push({\r\n                \"identifier\": {\r\n\r\n                    \"system\": \"http://snomed.info/sct\",\r\n                    \"value\": param.valueCode\r\n                },\r\n                \"display\": coding.display\r\n            });\r\n        } else if (unit) {\r\n            this.notes.push('Unit: ' + coding.display)\r\n\r\n        } else if (scheduled) {\r\n            // this.notes.push('Scheduled: '+parameter.valueString);\r\n            if (!(coding.display.indexOf('No Cont') == 0))\r\n                this.medicinalProduct.additionalMonitoringIndicator = concept;\r\n        } else if (synonym) {\r\n\r\n            this.medicinalProduct.name.push({\r\n                productName: coding.display\r\n            })\r\n        } else if (prescribingStatus) {\r\n            // this.notes.push('Prescribing Status: '+parameter.valueString);\r\n            this.medicinalProduct.productClassification.push(concept);\r\n        } else if (amp) {\r\n            this.ampCodes.push(coding);\r\n            this.ampDataSource.data = this.ampCodes;\r\n        } else if (unavailable) {\r\n            //  if (!(parameter.valueString.startsWith(\"Available\"))) this.unavailable =parameter.valueString;\r\n            this.medicinalProduct.legalStatusOfSupply = concept;\r\n        } else if (discont) {\r\n            //  this.discontinued= parameter.valueString;\r\n            this.medicinalProduct.legalStatusOfSupply = concept;\r\n        } else if (route) {\r\n            //this.notes.push('Route: '+parameter.valueString);\r\n            this.pharmaceuticalProduct.routeOfAdministration = [];\r\n            this.pharmaceuticalProduct.routeOfAdministration.push(\r\n                {\r\n                    code: concept\r\n                }\r\n            );\r\n        } else {\r\n            if (classification) this.medicinalProduct.productClassification.push(concept);\r\n        }\r\n        // This is a bodge\r\n        delete param.valueCode;// = undefined;\r\n        // This should be the answer\r\n        param.valueCoding = coding;\r\n    }\r\n\r\n    processResult(result, param, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification) {\r\n        for (const parameter of result.parameter) {\r\n\r\n\r\n            if (parameter.name === 'display') {\r\n\r\n\r\n                var coding: Coding = {};\r\n                coding = {\r\n                    \"system\": \"http://snomed.info/sct\",\r\n                    \"code\": param.valueCode,\r\n                    \"display\": parameter.valueString\r\n                };\r\n                this.processEntry(coding, param, manfacturedForm, unit, unitOfUse, ingredient, scheduled, synonym, prescribingStatus, amp, unavailable, discont, route, classification)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    hasCode(concept) {\r\n\r\n        if (this.childExpand.expansion != undefined) {\r\n            for (const container of this.childExpand.expansion.contains) {\r\n                if (container.code === concept) {\r\n                    return container;\r\n                }\r\n            }\r\n        }\r\n        if (this.parentExpand.expansion != undefined) {\r\n            for (const container of this.parentExpand.expansion.contains) {\r\n                if (container.code === concept) {\r\n                    return container;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    updateMaster() {\r\n        this.queryCnt--;\r\n\r\n        if (this.queryCnt == 0) {\r\n            //var clone = Object.assign({}, this.product);\r\n            this.productDisplay = this.product;\r\n            if (this.pharmaceuticalProduct.routeOfAdministration.length > 0) {\r\n                this.productPharm = this.pharmaceuticalProduct;\r\n            }\r\n            if (this.medicinalProduct.name.length > 0) {\r\n                this.medicinal = this.medicinalProduct;\r\n            }\r\n        }\r\n    }\r\n\r\n    getCodeableConcept(code, display) {\r\n        return {\r\n            coding: [\r\n                {\r\n                    \"system\": \"http://snomed.info/sct\",\r\n                    \"code\": code,\r\n                    \"display\": display\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    getParents(params: ParametersParameter[]) {\r\n        for (const parameter of params) {\r\n            if (parameter.valueCode != 'parent' && parameter.name === 'value') {\r\n                var parentCode = parameter.valueCode;\r\n                switch (parentCode) {\r\n                    case '30450011000036109': // Medicinal Product\r\n                    case '30560011000036108' : // Trade Product\r\n                    case '30513011000036104': // medicinal product pack\r\n                    case '30425011000036101': // - trade product unit of use\r\n                    case '30497011000036103':\r\n                    case '30404011000036106':\r\n                    case '10363701000001104': //vtm\r\n                    case \"9191801000001103\": //trade family\r\n                    case '350295000': // oral form dose\r\n                    case '440131009':\r\n                    case '10364001000001104' : // 'ampp'\r\n                    case '8653601000001108':\r\n                    case '10363901000001102':\r\n                        break;\r\n                    default: {\r\n                        const url = '/CodeSystem/$lookup?code=' + parentCode + '&system=http%3A%2F%2Fsnomed.info%2Fsct&property=*';\r\n                        this.terminologyService.getResource(url).subscribe(\r\n                            result => {\r\n                                for (const parameter of result.parameter) {\r\n                                    if (parameter.name === 'display') {\r\n                                        this.parentCodes.push({\r\n                                            'code': parentCode,\r\n                                            'display': parameter.valueString\r\n                                        })\r\n                                        this.parentDataSource.data = this.parentCodes;\r\n                                    }\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    isNumber(value: string | number): boolean {\r\n        return ((value != null) &&\r\n            (value !== '') &&\r\n            !isNaN(Number(value.toString())));\r\n    }\r\n\r\n}\r\n","<td-layout [mode]=\"'side'\" [opened]=\"true\" [sidenavWidth]=\"'257px'\" class=\"layout-demo\">\r\n\r\n    <!-- Side Navigation -->\r\n\r\n    <div td-sidenav-content>\r\n        <h3>Parent Medication</h3>\r\n        <table [dataSource]=\"parentDataSource\"  mat-table>\r\n            <ng-container matColumnDef=\"display\">\r\n                <th *matHeaderCellDef mat-header-cell> Display</th>\r\n                <td (click)=\"select(medication)\" *matCellDef=\"let medication\"\r\n                    [matTooltip]=\"'SNOMED CT - '+medication.code\" mat-cell>\r\n                    <b>{{medication.display}}</b></td>\r\n            </ng-container>\r\n\r\n            <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n            <tr *matRowDef=\"let row; columns: childDisplayedColumns\" mat-row></tr>\r\n        </table>\r\n\r\n        <h3>Child Medication</h3>\r\n        <table [dataSource]=\"childDataSource\" mat-table>\r\n\r\n\r\n            <ng-container matColumnDef=\"display\">\r\n                <th *matHeaderCellDef mat-header-cell> Display</th>\r\n                <td (click)=\"select(medication)\" *matCellDef=\"let medication\"\r\n                    [matTooltip]=\"'SNOMED CT - '+medication.code\" mat-cell>\r\n                    <b>{{medication.display}}</b></td>\r\n            </ng-container>\r\n\r\n            <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n            <tr *matRowDef=\"let row; columns: childDisplayedColumns\" mat-row></tr>\r\n        </table>\r\n        <span *ngIf=\"ampCodes.length>0\">\r\n            <h3>AMP Medication</h3>\r\n            <table [dataSource]=\"ampDataSource\"  mat-table>\r\n\r\n                <ng-container matColumnDef=\"display\">\r\n                    <th *matHeaderCellDef mat-header-cell> Display </th>\r\n                    <td (click)=\"select(medication)\" *matCellDef=\"let medication\"\r\n                        [matTooltip]=\"'SNOMED CT - '+medication.code\" mat-cell>\r\n                        <b>{{medication.display}}</b> </td>\r\n                </ng-container>\r\n\r\n                <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n                <tr *matRowDef=\"let row; columns: childDisplayedColumns\" mat-row></tr>\r\n            </table>\r\n        </span>\r\n    </div>\r\n\r\n\r\n    <!-- Body Content -->\r\n\r\n    <mat-card>\r\n\r\n        <ng-template tdLoading [tdLoadingUntil]=\"!loading\">\r\n\r\n\r\n\r\n    <mat-card-content>\r\n        <mat-card-header class=\"container\">\r\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between\" fxLayoutGap=\"40px\">\r\n\r\n                <h3 *ngIf=\"medication\" >{{medication.code.coding[0].display}}</h3>\r\n\r\n\r\n                <div *ngIf=\"medicinal\">\r\n\r\n                    <td-message\r\n                            *ngIf=\"(medicinal.legalStatusOfSupply != undefined) && (medicinal.legalStatusOfSupply.coding !=undefined)\"\r\n                            [label]=\"medicinal.legalStatusOfSupply.coding[0].display\" color=\"primary\" icon=\"info\"\r\n                            sublabel=\"Supply Status\"></td-message>\r\n                </div>\r\n                <div *ngIf=\"medicinal\">\r\n                    <td-message *ngIf=\"medicinal.type\"\r\n                                [label]=\"medicinal.type.coding[0].display\" color=\"primary\" icon=\"info\"\r\n                                sublabel=\"Type\"></td-message>\r\n                </div>\r\n                <div *ngIf=\"medicinal\">\r\n                    <td-message *ngIf=\"medicinal.additionalMonitoringIndicator\"\r\n                                [label]=\"medicinal.additionalMonitoringIndicator.coding[0].display\" color=\"warn\" icon=\"warning\"\r\n                                sublabel=\"Monitoring Indicator\"></td-message>\r\n                </div>\r\n\r\n            </div>\r\n        </mat-card-header>\r\n    </mat-card-content>\r\n\r\n    <span *ngIf=\"medication\">\r\n\r\n        <td-expansion-panel label=\"Details\"  >\r\n            <div class=\"md-padding\">\r\n                <div fxLayout fxLayout.xs=\"column\" fxLayoutAlign=\"center\" fxLayoutGap.xs=\"0\">\r\n\r\n                    <div class=\"mat-body-1\" fxFlex=\"50%\">\r\n                        <span *ngIf=\"medicinal\">\r\n                            <mat-list>\r\n                                <mat-list-item *ngFor=\"let clss of medicinal.productClassification\">\r\n                                    <b matLine>Classification</b>\r\n                                    <i>\r\n                                        {{clss.coding[0].display}}</i>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"mat-body-1\" fxFlex=\"50%\">\r\n                        <span *ngIf=\"medicinal\">\r\n                            <mat-list>\r\n\r\n                                <mat-list-item *ngIf=\"medicinal.combinedPharmaceuticalDoseForm\">\r\n                                    <b mat-line>Dose Form</b>\r\n                                    <i>\r\n                                        {{medicinal.combinedPharmaceuticalDoseForm.coding[0].display}}\r\n                                    </i>\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </span>\r\n                        <span *ngIf=\"productPharm\">\r\n                            <mat-list>\r\n                                <mat-list-item *ngIf=\"productPharm.routeOfAdministration\">\r\n                                    <b mat-line>Route</b>\r\n                                    <i>\r\n                                        {{productPharm.routeOfAdministration[0].code.coding[0].display}}</i>\r\n\r\n                                </mat-list-item>\r\n                                <mat-list-item *ngFor=\"let ingredient of productPharm.ingredient\">\r\n                                    <b mat-line>Ingredient</b>\r\n                                    <i>{{ingredient.display}}</i>\r\n\r\n                                </mat-list-item>\r\n                                <mat-list-item *ngFor=\"let note of notes\">\r\n                                    {{note}}\r\n                                </mat-list-item>\r\n                            </mat-list>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </td-expansion-panel>\r\n    </span>\r\n    <br>\r\n\r\n    <app-medication-render [codeableConcept]=\"codeableConcept\" [medication]=\"medication\"></app-medication-render>\r\n    <app-product-render [medicationProduct]=\"medicinal\" [pharmaceuticalProduct]=\"productPharm\"\r\n        [product]=\"productDisplay\"></app-product-render>\r\n        </ng-template>\r\n    </mat-card>\r\n\r\n</td-layout>\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n\r\n  private message : String;\r\n\r\n  private messageEvent :EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  addMessage(message : String) {\r\n    console.log('bang');\r\n    this.message = message;\r\n    this.messageEvent.emit(message);\r\n  }\r\n\r\n  getMessageEvent() {\r\n    return this.messageEvent;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title = 'graphDefinition';\r\n}","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport {CovalentLayoutModule} from \"@covalent/core/layout\";\r\nimport {CovalentStepsModule} from \"@covalent/core/steps\";\r\nimport {CovalentHighlightModule} from \"@covalent/highlight\";\r\nimport {CovalentHttpModule} from \"@covalent/http\";\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MainComponent } from './main/main.component';\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {MatListModule} from \"@angular/material/list\";\r\nimport {MatMenuModule} from \"@angular/material/menu\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatTableModule} from \"@angular/material/table\";\r\nimport {MatCardModule} from \"@angular/material/card\";\r\nimport {MatTooltipModule} from \"@angular/material/tooltip\";\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {MatSelectModule} from \"@angular/material/select\";\r\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\r\nimport {MatDialogModule} from \"@angular/material/dialog\";\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {AppComponent} from \"./app.component\";\r\nimport { BodyComponent } from './body/body.component';\r\nimport {CovalentSearchModule} from \"@covalent/core/search\";\r\nimport {CovalentCommonModule} from \"@covalent/core/common\";\r\nimport { MedicationRenderComponent } from './medication-render/medication-render.component';\r\nimport {CovalentJsonFormatterModule} from \"@covalent/core/json-formatter\";\r\nimport {MessageService} from \"./message.service\";\r\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\r\nimport { ProductRenderComponent } from './product-render/product-render.component';\r\nimport {CovalentMessageModule} from \"@covalent/core/message\";\r\nimport {CovalentExpansionPanelModule} from \"@covalent/core/expansion-panel\";\r\nimport {CovalentLoadingModule} from \"@covalent/core/loading\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n    MainComponent,\r\n    BodyComponent,\r\n    MedicationRenderComponent,\r\n    ProductRenderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CovalentLayoutModule,\r\n    CovalentStepsModule,\r\n    // (optional) Additional Covalent Modules imports\r\n    CovalentHttpModule.forRoot(),\r\n    CovalentHighlightModule,\r\n    CovalentJsonFormatterModule,\r\n    CovalentMessageModule,\r\n    CovalentSearchModule,\r\n    CovalentExpansionPanelModule,\r\n    CovalentLoadingModule,\r\n\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n\r\n\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    //   MatRadioModule,\r\n    MatSelectModule,\r\n    //  MatChipsModule,\r\n    //  MatSortModule,\r\n    MatToolbarModule,\r\n    MatDialogModule,\r\n      MatChipsModule,\r\n    CovalentCommonModule,\r\n    MatCheckboxModule,\r\n\r\n  ],\r\n  providers: [ MessageService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {DataSource} from '@angular/cdk/table';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\n// @ts-ignore\r\nimport ValueSetExpansionContains = fhir.ValueSetExpansionContains;\r\n\r\n\r\nexport class MedicationDataSource extends DataSource<any> {\r\n  constructor(\r\n              public contains: ValueSetExpansionContains[]\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  private dataStore: {\r\n    contains: ValueSetExpansionContains[]\r\n  };\r\n\r\n  connect(): Observable<ValueSetExpansionContains[]> {\r\n\r\n  //  console.log('contains DataSource connect '+this.patientId);\r\n\r\n    const _contains: BehaviorSubject<ValueSetExpansionContains[]> =<BehaviorSubject<ValueSetExpansionContains[]>>new BehaviorSubject([]);\r\n\r\n    this.dataStore = { contains: [] };\r\n\r\n\r\n   // console.log(this.contains);\r\n    if (this.contains !== [] && this.contains != undefined) {\r\n      for (const questionnaire of this.contains) {\r\n        this.dataStore.contains.push(<ValueSetExpansionContains> questionnaire);\r\n      }\r\n      _contains.next(Object.assign({}, this.dataStore).contains);\r\n    }\r\n   return _contains.asObservable();\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n","import {EventEmitter, Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {MessageService} from \"./message.service\";\r\nimport {Observable} from \"rxjs\";\r\n// @ts-ignore\r\nimport ValueSet = fhir.ValueSet;\r\nimport {environment} from \"../environments/environment\";\r\n\r\n\r\nexport enum Formats {\r\n  JsonFormatted = 'jsonf',\r\n  Json = 'json',\r\n  Xml = 'xml',\r\n  EprView = 'epr'\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TerminologyService {\r\n\r\n\r\n  private format: Formats = Formats.JsonFormatted;\r\n\r\n  private accessToken: string = undefined\r\n\r\n  private nameChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  private authenticated: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient, private messageService: MessageService) {\r\n\r\n  }\r\n\r\n  setDrugName(drugName : string) {\r\n     this.nameChange.emit(drugName);\r\n  }\r\n  getDrugNameChange() {\r\n    return this.nameChange;\r\n  }\r\n\r\n  getMedicationValueSet() {\r\n    var encodedUri = encodeURIComponent('https://fhir.hl7.org.uk/ValueSet/UKCore-MedicationCode');\r\n    console.log(encodedUri)\r\n     return encodedUri;\r\n  }\r\n\r\n/*\r\n  getSNOMEDVersionRaw() {\r\n    return 'http://snomed.info/sct/999000031000000106/version/20190807';\r\n  }\r\n  getSNOMEDVersion() {\r\n    var encodedUri = encodeURIComponent(this.getSNOMEDVersionRaw());\r\n    console.log(encodedUri)\r\n    return encodedUri;\r\n  }\r\n*/\r\n  getHeaders(contentType: boolean = true): HttpHeaders {\r\n\r\n    let headers = new HttpHeaders(\r\n    );\r\n    if (contentType) {\r\n      headers = headers.append('Content-Type', 'application/fhir+json');\r\n      headers = headers.append('Accept', 'application/fhir+json');\r\n    }\r\n    return headers;\r\n  }\r\n\r\n  public getResource(search: string): Observable<any> {\r\n\r\n    const url = environment.config.baseUrl + search;\r\n    let headers = new HttpHeaders(\r\n    );\r\n    headers = headers.append('Authorization', 'Bearer '+this.getAccessToken());\r\n    if (this.format === 'xml') {\r\n      headers = headers.append('Content-Type', 'application/fhir+xml');\r\n      headers = headers.append('Accept', 'application/fhir+xml');\r\n\r\n      return this.http.get(url, {headers, responseType: 'blob' as 'blob'});\r\n    } else {\r\n      return this.http.get<any>(url, {'headers': headers});\r\n    }\r\n  }\r\n\r\n  public get(search: string): Observable<ValueSet> {\r\n\r\n    const url: string = environment.config.baseUrl + search;\r\n    let headers = new HttpHeaders(\r\n    );\r\n    headers = headers.append('Authorization', 'Bearer '+this.getAccessToken());\r\n    if (this.format === 'xml') {\r\n      headers = headers.append('Content-Type', 'application/fhir+xml');\r\n      headers = headers.append('Accept', 'application/fhir+xml');\r\n\r\n      return this.http.get(url, {headers, responseType: 'blob' as 'blob'});\r\n    } else {\r\n      return this.http.get<any>(url, {'headers': headers});\r\n    }\r\n  }\r\n\r\n  public post(resource: string, body: any): Observable<any> {\r\n\r\n    let headers: HttpHeaders = this.getHeaders(false);\r\n    headers = headers.append('Authorization', 'Bearer '+this.getAccessToken());\r\n    headers = headers.append('Content-Type', 'application/fhir+json');\r\n    headers = headers.append('Accept', 'application/fhir+json');\r\n\r\n    return this.http.post<any>(environment.config.baseUrl + resource, body, {headers: headers});\r\n  }\r\n\r\n  getAccessToken() {\r\n    return this.accessToken\r\n  }\r\n\r\n  doAuthenticate() {\r\n    let body = new URLSearchParams();\r\n    body.append('grant_type', 'client_credentials');\r\n    body.append('client_id', environment.config.ontoClientId);\r\n    body.append('client_secret', environment.config.ontoClientSecret);\r\n    let headers: HttpHeaders = this.getHeaders(false);\r\n    headers = headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n    this.http.post<any>('https://ontology.nhs.uk/authorisation/auth/realms/nhs-digital-terminology/protocol/openid-connect/token',body.toString(),\r\n        { headers: headers }).subscribe(response => {\r\n      console.log(response)\r\n\r\n      this.accessToken = response.access_token;\r\n      console.log(this.accessToken)\r\n      this.authenticated.emit(this.accessToken);\r\n    },err =>{\r\n      console.log('oops')\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {MainComponent} from \"./main/main.component\";\r\nimport {BodyComponent} from \"./body/body.component\";\r\n\r\nconst routes: Routes = [\r\n  // { path: '', redirectTo: 'fhir', pathMatch: 'full'},\r\n  {\r\n    path: '', component: MainComponent,\r\n    children : [\r\n      { path: '', component: BodyComponent},\r\n      { path: ':conceptid', component: BodyComponent}\r\n    ]\r\n  }\r\n  ]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {MedicationDataSource} from \"../medication-data-source\";\r\nimport {TerminologyService} from \"../terminology.service\";\r\n// @ts-ignore\r\nimport ValueSet = fhir.ValueSet;\r\n// @ts-ignore\r\nimport ValueSetExpansionContains = fhir.ValueSetExpansionContains;\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  constructor(private terminologyService: TerminologyService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  searchInput;\r\n\r\n  drugName = '';\r\n\r\n  dataSource: MedicationDataSource;\r\n\r\n  displayedColumns = [ 'display'];\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.terminologyService.doAuthenticate();\r\n\r\n    this.terminologyService.getDrugNameChange().subscribe(name => {\r\n      this.drugName = name;\r\n    })\r\n  }\r\n\r\n  search(name) {\r\n\r\n    if (name != undefined) {\r\n      const url = '/ValueSet/$expand?_format=json&url='+this.terminologyService.getMedicationValueSet()+'&filter='+encodeURI(name)+'&includeDesignations=true&count=100&elements=expansion.contains.code,expansion.contains.display,expansion.contains.fullySpecifiedName,expansion.contains.active';\r\n      //const url = '/ValueSet/$expand?_format=json&url=https%3A%2F%2Fhealthterminologies.gov.au%2Ffhir%2FValueSet%2Faustralian-medication-1&filter='+name+'&includeDesignations=true&count=100&elements=expansion.contains.code,expansion.contains.display,expansion.contains.fullySpecifiedName,expansion.contains.active';\r\n      this.terminologyService.get(url).subscribe(\r\n          result => {\r\n            const valueSet = <ValueSet>result;\r\n\r\n            if (valueSet.expansion != undefined )\r\n              this.dataSource = new MedicationDataSource(valueSet.expansion.contains);\r\n          }\r\n      );\r\n    }\r\n  }\r\n\r\n  select(medication: ValueSetExpansionContains) {\r\n    this.router.navigate([ medication.code ], {relativeTo: this.route});\r\n  }\r\n\r\n  getType(contains : ValueSetExpansionContains) {\r\n    for (const desingation of contains.designation) {\r\n      var splitted = desingation.value.split(\"(\");\r\n      if (splitted.length > 1) {\r\n        return splitted[splitted.length-1].replace(')','');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n}\r\n","<td-layout class=\"layout-nav-demo\" sidenavWidth=\"280px\">\r\n    <td-navigation-drawer\r\n            flex\r\n            sidenavTitle=\"Search\" >\r\n        <div flex>\r\n            <td-search-input  placeholder=\"Name or Code\" [(ngModel)]=\"searchInput\" [showUnderline]=\"true\" [debounce]=\"500\" (searchDebounce)=\"search($event)\" (search)=\"search($event)\" (clear)=\"searchInput = ''\">\r\n            </td-search-input>\r\n        </div>\r\n        <section class=\"example-section\">\r\n            <mat-checkbox disabled=\"true\" class=\"example-margin\">Moiety (VTM)</mat-checkbox>\r\n            <mat-checkbox disabled=\"true\" class=\"example-margin\">Product (VMP and AMP)</mat-checkbox>\r\n            <mat-checkbox disabled=\"true\" class=\"example-margin\">Pack (VMPP and AMPP)</mat-checkbox>\r\n        </section>\r\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n            <ng-container matColumnDef=\"display\">\r\n                <th mat-header-cell *matHeaderCellDef> Display </th>\r\n                <!-- (click)=\"select(medication)\" -->\r\n                <td mat-cell class=\"hover\" routerLink=\"/{{medication.code}}\" *matCellDef=\"let medication\"\r\n                    [matTooltip]=\"'SNOMED CT - '+medication.code\" tdLayoutToggle>\r\n                    <b>{{medication.display}}</b>\r\n                    <br>  <small>{{getType(medication)}}</small> </td>\r\n            </ng-container>\r\n\r\n            <!-- <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr> -->\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n    </td-navigation-drawer>\r\n    <td-layout-nav-list navigationRoute=\"/\" opened=\"false\" mode=\"side\">\r\n\r\n        <div td-sidenav-content>\r\n\r\n\r\n        </div>\r\n        <div td-toolbar-content flex-auto>\r\n            <span flex>\r\n            <button mat-icon-button td-menu-button tdLayoutToggle>\r\n                <mat-icon>search</mat-icon>\r\n            </button>\r\n            DM+D Browser\r\n            </span>\r\n             <!--   <span *ngIf=\"drugName\"> - {{drugName}}</span> -->\r\n        </div>\r\n        <router-outlet></router-outlet>\r\n    </td-layout-nav-list>\r\n</td-layout>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}